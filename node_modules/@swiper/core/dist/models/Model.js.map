{"version":3,"sources":["../../src/models/Model.js"],"names":["Model","EventEmitter","constructor","opts","flags","flag","names","name","toJSON","data","val","key","replace","getValidators","iter","validators","push","Object","getPrototypeOf","validate","errors","validator","call"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAEO,MAAMA,KAAN,SAAoBC,oBAApB,CAAiC;AAEtCC,EAAAA,WAAW,CAAE,GAAGC,IAAL,EAAY;AACrB;AACA,0BAAU,IAAV,EAAgB,GAAGA,IAAnB;AACA,4BAAY,IAAZ,EAAkB;AAChBC,MAAAA,KAAK,EAAG;AADQ,KAAlB;AAGD;;AAEDC,EAAAA,IAAI,CAAE,GAAGC,KAAL,EAAa;AACf,WAAO,oBAAQA,KAAR,EAAeC,IAAI,IAAI,wBAAY,KAAKH,KAAjB,EAAwBG,IAAxB,CAAvB,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,IAAI,GAAG,sBAAU,IAAV,EAAgB,CAAEC,GAAF,EAAOC,GAAP,KAAgB;AAC3C,UAAK,qBAASD,GAAT,CAAL,EAAsB,OAAO,KAAP;AACtB,UAAK,0BAAcA,GAAd,CAAL,EAA2B,OAAO,KAAP;AAC3B,UAAKC,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,aAAjC,EAAiD,OAAO,KAAP;AACjD,aAAO,CAAE,wBAAY,CAAE,SAAF,EAAa,cAAb,CAAZ,EAA2CA,GAA3C,CAAT;AACD,KALY,CAAb;AAMA,WAAO,uBAAWF,IAAX,EAAiB,CAAEC,GAAF,EAAOC,GAAP,KAAgBA,GAAG,CAACC,OAAJ,CAAa,KAAb,EAAoB,EAApB,CAAjC,CAAP;AAED;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAIC,IAAI,GAAG,IAAX;AACA,UAAMC,UAAU,GAAG,EAAnB;;AACA,WAAQD,IAAR,EAAe;AACbC,MAAAA,UAAU,CAACC,IAAX,CAAiBF,IAAI,CAACC,UAAtB;AACAD,MAAAA,IAAI,GAAGG,MAAM,CAACC,cAAP,CAAuBJ,IAAvB,CAAP;AACD;;AACD,WAAO,2BAAeC,UAAf,CAAP;AACD;;AAEDI,EAAAA,QAAQ,GAAG;AACT,UAAMJ,UAAU,GAAG,KAAKF,aAAL,EAAnB;AACA,UAAMO,MAAM,GAAG,uBAAW,mBAAOL,UAAP,EAAmBM,SAAS,IAAI;AACxD,aAAOA,SAAS,CAACC,IAAV,CAAgB,IAAhB,EAAsB,IAAtB,CAAP;AACD,KAFyB,CAAX,CAAf;AAGA,WAAOF,MAAP;AACD,GAzCqC,CA2CtC;;;AA3CsC","sourcesContent":["import _ from 'lodash';\nimport { EventEmitter } from 'events';\n\nexport class Model extends EventEmitter {\n\n  constructor( ...opts ) {\n    super();\n    _.assign( this, ...opts );\n    _.defaults( this, {\n      flags : [],\n    } );\n  }\n\n  flag( ...names ) {\n    return _.some( names, name => _.includes( this.flags, name ) );\n  }\n\n  toJSON() {\n    const data = _.pickBy( this, ( val, key ) => {\n      if ( _.isNil( val ) ) return false;\n      if ( _.isFunction( val ) ) return false;\n      if ( key === 'events' || key === 'eventsCount' ) return false;\n      return ! _.includes( [ '_events', '_eventsCount' ], key );\n    } );\n    return _.mapKeys( data, ( val, key ) => key.replace( /^_/u, '' ) );\n\n  }\n\n  getValidators() {\n    let iter = this;\n    const validators = [];\n    while ( iter ) {\n      validators.push( iter.validators );\n      iter = Object.getPrototypeOf( iter );\n    }\n    return _.flattenDeep( validators );\n  }\n\n  validate() {\n    const validators = this.getValidators();\n    const errors = _.compact( _.map( validators, validator => {\n      return validator.call( this, this );\n    } ) );\n    return errors;\n  }\n\n  // [ Symbol.for( 'nodejs.util.inspect.custom' ) ]() { return this.toJSON(); }\n\n}\n"],"file":"Model.js"}