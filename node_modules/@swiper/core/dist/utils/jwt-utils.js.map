{"version":3,"sources":["../../src/utils/jwt-utils.js"],"names":["jwt_decode","jwt_token","accessToken","token","rawToken","iat","issued","Date","exp","expires","Reflect","defineProperty","get","now","authenticated","Boolean","memberId","error"],"mappings":";;;;;;;;;;;;;;;AACA;;AAEO,SAASA,UAAT,CAAqBC,SAArB,EAAiC;AACtC,MAAK,6BAAiBA,SAAjB,KAAgC,wBAAYA,SAAS,CAACC,WAAtB,CAArC,EAA2E;AACzED,IAAAA,SAAS,GAAGA,SAAS,CAACC,WAAtB;AACD;;AACD,QAAMC,KAAK,GAAG;AAAEC,IAAAA,QAAQ,EAAGH;AAAb,GAAd;;AACA,MAAI;AACF,0BAAUE,KAAV,EAAiB,wBAAYF,SAAZ,CAAjB;AACA,QAAKE,KAAK,CAACE,GAAX,EAAiBF,KAAK,CAACG,MAAN,GAAe,IAAIC,IAAJ,CAAUJ,KAAK,CAACE,GAAN,GAAY,IAAtB,CAAf;;AACjB,QAAKF,KAAK,CAACK,GAAX,EAAiB;AACf,YAAMA,GAAG,GAAGL,KAAK,CAACK,GAAN,GAAY,IAAxB;AACAL,MAAAA,KAAK,CAACM,OAAN,GAAgB,IAAIF,IAAJ,CAAUC,GAAV,CAAhB;AACAE,MAAAA,OAAO,CAACC,cAAR,CAAwBR,KAAxB,EAA+B,SAA/B,EAA0C;AACxCS,QAAAA,GAAG,GAAG;AAAE,iBAAOL,IAAI,CAACM,GAAL,KAAaL,GAApB;AAA0B;;AADM,OAA1C;AAGD;;AACDL,IAAAA,KAAK,CAACW,aAAN,GAAsBC,OAAO,CAAEZ,KAAK,CAACa,QAAR,CAA7B;AACA,WAAOb,KAAP;AACD,GAZD,CAYE,OAAOc,KAAP,EAAe;AACf,WAAO,sBAAUd,KAAV,EAAiB;AAAEc,MAAAA;AAAF,KAAjB,CAAP;AACD;AACF","sourcesContent":["import _ from 'lodash';\nimport raw_decode from 'jwt-decode';\n\nexport function jwt_decode( jwt_token ) {\n  if ( _.isPlainObject( jwt_token ) && _.isString( jwt_token.accessToken ) ) {\n    jwt_token = jwt_token.accessToken;\n  }\n  const token = { rawToken : jwt_token };\n  try {\n    _.assign( token, raw_decode( jwt_token ) );\n    if ( token.iat ) token.issued = new Date( token.iat * 1000 );\n    if ( token.exp ) {\n      const exp = token.exp * 1000;\n      token.expires = new Date( exp );\n      Reflect.defineProperty( token, 'expired', {\n        get() { return Date.now() > exp; },\n      } );\n    }\n    token.authenticated = Boolean( token.memberId );\n    return token;\n  } catch( error ) {\n    return _.assign( token, { error } );\n  }\n}\n"],"file":"jwt-utils.js"}